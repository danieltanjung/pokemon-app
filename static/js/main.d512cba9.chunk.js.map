{"version":3,"sources":["components/StartScreen/StartScreen.js","utils.js","components/Pokemon/Pokemon.js","components/LoadingOverlay/LoadingOverlay.js","contexts/ArchiveContext.js","components/NewPokemonForm/NewPokemonForm.js","components/DeleteConfirmation/DeleteConfirmation.js","components/ErrorPage/ErrorPage.js","components/PokemonDetails/PokemonDetails.js","components/ScrollToTopButton/ScrollToTopButton.js","contexts/PokemonListContext.js","components/PokemonList/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","startApp","Container","fluid","id","Button","onClick","className","LS_ARCHIVE","capitalize","string","charAt","toUpperCase","slice","setLocalStorage","key","value","localStorage","setItem","JSON","stringify","Pokemon","pokemon","displayName","hasOwnProperty","nickname","name","Card","CardImg","variant","src","image","alt","loading","Body","Title","LoadingOverlay","animation","Spinner","ArchiveContext","React","createContext","ArchiveUpdateContext","a","console","log","useArchive","useContext","useArchiveUpdate","ArchiveContextProvider","children","useState","archive","setArchive","useEffect","data","parse","getItem","Provider","list","NewPokemonForm","onClose","onComplete","show","setShow","validated","setValidated","formName","setFormName","warning","setWarning","formNameRef","useRef","handleClose","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","onAnimationEnd","Form","noValidate","onSubmit","e","preventDefault","stopPropagation","length","newPokemon","uuid","newList","addToArchive","current","focus","Group","controlId","Label","Control","ref","type","placeholder","required","onChange","target","isInvalid","Feedback","Footer","DeleteModal","style","color","filter","p","deleteFromArchive","ErrorPage","error","GET_POKEMON_DETAILS","gql","PokemonDetails","closeDetails","tried","setTried","successDialogue","setSuccessDialogue","deleteDialogue","setDeleteDialogue","isMine","useQuery","variables","species","info","Row","Col","md","xs","types","map","t","weight","height","Subtitle","stats","s","stat","base_stat","ListGroup","abilities","ListGroupItem","ability","Math","random","Image","ScrollToTopButton","document","body","scrollTop","documentElement","PokemonListContext","PokemonListFetchContext","GET_POKEMONS","PokemonListContextProvider","pokemonList","setPokemonList","skipQuery","setSkipQuery","skip","limit","offset","results","pokemons","PokemonList","isArchive","setIsArchive","details","setDetails","viewDetails","obj","Badge","App","showStartScreen","setShowStartScreen","showPokemonList","setShowPokemonList","fade","setFade","srcSet","setTimeout","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","ReactDOM","render","StrictMode","getElementById"],"mappings":"gcAKe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,eAApB,UACE,oBAAIA,GAAG,QAAP,wBACA,oBAAIA,GAAG,WAAP,uCACA,eAACC,EAAA,EAAD,CAAQD,GAAG,cAAcE,QAASL,EAAlC,sBACW,mBAAGM,UAAU,qB,0CCVjBC,EAAa,UAEnB,SAASC,EAAWC,GACzB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAWhD,SAASC,EAAgBC,EAAKC,GACnCC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,ICX5B,SAASK,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,QAAShB,EAAW,EAAXA,QACnCiB,EAAcD,EAAQE,eAAe,YACvCF,EAAQG,SACRH,EAAQI,KACZ,OACE,eAACC,EAAA,EAAD,CAAMpB,UAAU,eAAeD,QAAS,kBAAMA,EAAQgB,IAAtD,UACE,cAACM,EAAA,EAAD,CACErB,UAAU,sBACVsB,QAAQ,MACRC,IAAKR,EAAQS,MACbC,IAAKT,EAAc,WACnBU,QAAQ,SAEV,cAACN,EAAA,EAAKO,KAAN,UACE,cAACP,EAAA,EAAKQ,MAAN,CAAY5B,UAAU,qBAAtB,SACGE,EAAWc,U,2GChBP,SAASa,EAAT,GAGX,IAAD,IAFDC,iBAEC,MAFW,SAEX,MADDR,eACC,MADS,QACT,EACD,OACE,sBAAKzB,GAAG,oBAAR,UACE,cAACkC,EAAA,EAAD,CACE/B,UAAU,UAEV8B,UAA8CA,EAC9CR,QASMA,IAIR,8C,4CCxBAU,EAAiBC,IAAMC,cAAc,IACrCC,EAAuBF,IAAMC,eAAc,SAACE,GAChDC,QAAQC,IAAIF,MAGP,SAASG,IACd,OAAOC,qBAAWR,GAGb,SAASS,IACd,OAAOD,qBAAWL,GAGL,SAASO,EAAT,GAA+C,IAAbC,EAAY,EAAZA,SAAY,EAC7BC,mBAAS,IADoB,mBACpDC,EADoD,KAC3CC,EAD2C,KAe3D,OAXAC,qBAAU,WACR,IHV4BvC,EGUtBwC,GHVsBxC,EGUCP,EHTxBW,KAAKqC,MAAMvC,aAAawC,QAAQ1C,KGWjCwC,EACFF,EAAWE,IAEXF,EAAW,IACXvC,EAAgBN,EAAY,OAE7B,IAGD,cAAC+B,EAAemB,SAAhB,CAAyB1C,MAAOoC,EAAhC,SACE,cAACV,EAAqBgB,SAAtB,CAA+B1C,MAAO,SAAC2C,GAAD,OAAUN,EAAWM,IAA3D,SACGT,MC1BM,SAASU,EAAT,GAA2D,IAAjCtC,EAAgC,EAAhCA,QAASuC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EAC/CX,oBAAS,GADsC,mBAChEY,EADgE,KAC1DC,EAD0D,OAErCb,oBAAS,GAF4B,mBAEhEc,EAFgE,KAErDC,EAFqD,OAGvCf,mBAAS,IAH8B,mBAGhEgB,EAHgE,KAGtDC,EAHsD,OAIzCjB,oBAAS,GAJgC,mBAIhEkB,EAJgE,KAIvDC,EAJuD,KAKjElB,EAAUN,IACVO,EAAaL,IACbuB,EAAcC,iBAAO,MAU3B,SAASC,IACPT,GAAQ,GACRH,IA0CF,OACE,eAACa,EAAA,EAAD,CACEX,KAAMA,EACNxD,UAAU,UACVoE,OAAQF,EACRG,SAAS,SACTC,UAAU,EACVC,UAAQ,EANV,UAQE,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMvC,MAAP,wBAEF,cAACuC,EAAA,EAAMxC,KAAP,CACE3B,UAAW8D,EAAU,YAAc,GACnCY,eA9DN,WACEX,GAAW,IA2DT,SAIE,eAACY,EAAA,EAAD,CAAMC,YAAU,EAAClB,UAAWA,EAAWmB,SAlD7C,SAAsBC,GACpBA,EAAEC,iBACFD,EAAEE,kBAEEpB,EAASqB,QAAU,GAAKrB,EAASqB,QAAU,IAC7CtB,GAAa,GAUjB,SAAsBzC,GACpB,IAAMgE,EAAa,CACjBC,KAAMA,cACNjE,SAAUA,EACVrB,GAAIkB,EAAQlB,GACZsB,KAAMJ,EAAQI,KACdK,MAAOT,EAAQS,OAEX4D,EAAO,sBAAOvC,GAAP,CAAgBqC,IAG7BpC,EAAWsC,GAGX7E,EAAgBN,EAAYmF,GAE5B/C,QAAQC,IAAI,UAzBV+C,CAAazB,GACbM,IACAX,MAEAS,EAAYsB,QAAQC,QA3BtBxB,GAAW,KAmEP,UACE,eAACY,EAAA,EAAKa,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACd,EAAA,EAAKe,MAAN,2CACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,IAAK5B,EACL6B,KAAK,OACLC,YAAY,uBACZC,UAAQ,EACRtF,MAAOmD,EACPoC,SAhEZ,SAAsBlB,GACpBjB,EAAYiB,EAAEmB,OAAOxF,OACrBkD,GAAa,IA+DHuC,UAAWtC,EAASqB,OAAS,GAAKrB,EAASqB,OAAS,KAEtD,cAACN,EAAA,EAAKgB,QAAQQ,SAAd,CAAuBN,KAAK,UAA5B,6DAIF,sBAAKhG,GAAG,iBAAR,UACE,cAACC,EAAA,EAAD,CAAQwB,QAAQ,SAASvB,QAASmE,EAAlC,0BAGA,cAACpE,EAAA,EAAD,CAAQwB,QAAQ,UAAUuE,KAAK,SAA/B,0BAMN,cAAC1B,EAAA,EAAMiC,OAAP,UACE,2F,MC1GO,SAASC,EAAT,GAAwD,IAAjCtF,EAAgC,EAAhCA,QAASuC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EAC5CX,oBAAS,GADmC,mBAC7DY,EAD6D,KACvDC,EADuD,KAE9DZ,EAAUN,IACVO,EAAaL,IAEnB,SAASyB,IACPT,GAAQ,GACRH,IAwBF,OACE,eAACa,EAAA,EAAD,CACEnE,UAAU,kBACVwD,KAAMA,EACNY,OAAQF,EACRG,SAAS,SACTC,UAAU,EACVC,UAAQ,EANV,UAQE,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAMvC,MAAP,yBAEF,eAACuC,EAAA,EAAMxC,KAAP,WACE,+FACA,mBAAG2E,MAAO,CAAEC,MAAO,OAAnB,yDAEF,eAACpC,EAAA,EAAMiC,OAAP,WACE,cAACtG,EAAA,EAAD,CAAQwB,QAAQ,UAAUvB,QAASmE,EAAnC,oBAGA,cAACpE,EAAA,EAAD,CAAQwB,QAAQ,SAASvB,QAzC/B,SAAsB+E,GACpBA,EAAEC,iBACFD,EAAEE,kBAOJ,WACE,IAAMI,EAAUvC,EAAQ2D,QAAO,SAACC,GAAD,OAAOA,EAAEtB,OAASpE,EAAQoE,QAGzDrC,EAAWsC,GAGX7E,EAAgBN,EAAYmF,GAE5B/C,QAAQC,IAAI,YAdZoE,GACAxC,IACAX,KAmCI,0B,YCrDO,SAASoD,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClC,OACE,eAACjH,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,kBAApB,UACE,wCACA,qDACA,+BAAO+G,OCYb,IAAMC,EAAsBC,IAAH,kZA4BV,SAASC,EAAT,GAAoD,IAA1BhG,EAAyB,EAAzBA,QAASiG,EAAgB,EAAhBA,aAAgB,EACtCpE,oBAAS,GAD6B,mBACzDqE,EADyD,KAClDC,EADkD,OAElBtE,oBAAS,GAFS,mBAEzDuE,EAFyD,KAExCC,EAFwC,OAGpBxE,oBAAS,GAHW,mBAGzDyE,EAHyD,KAGzCC,EAHyC,OAIlC1E,oBAAS,GAJyB,mBAIzDkB,EAJyD,KAIhDC,EAJgD,KAK1DwD,EAASxG,EAAQE,eAAe,YAL0B,EAO/BuG,YAASX,EAAqB,CAC7DY,UAAW,CAAEC,QAAS3G,EAAQI,QADxBO,EAPwD,EAOxDA,QAASkF,EAP+C,EAO/CA,MAAO5D,EAPwC,EAOxCA,KA4BxB,GAAItB,EACF,OAAO,cAAC,EAAD,CAAgBI,UAAU,OAAOR,QAAQ,UAC3C,GAAIsF,EACT,OAAO,cAAC,EAAD,CAAWA,MAAOA,IAEzB,IAAMe,EAAO3E,EAAKjC,QAElB,OACE,eAACK,EAAA,EAAD,CACEvB,GAAG,UACHG,UAAW8D,EAAU,YAAc,GACnCY,eA/BN,WACEX,GAAW,IA2BT,UAKE,cAAC1C,EAAA,EAAD,CACExB,GAAG,iBACH0B,IAAKR,EAAQS,MACbC,IAAKkG,EAAKxG,KAAO,aAElBoG,GACC,cAACnG,EAAA,EAAKQ,MAAN,CAAY/B,GAAG,oBAAoBG,UAAU,UAA7C,SACGe,EAAQG,WAGb,cAACpB,EAAA,EAAD,CAAQD,GAAG,eAAeyB,QAAQ,OAAOvB,QAASiH,EAAlD,SACE,mBAAGhH,UAAU,kBAEf,eAACoB,EAAA,EAAD,CAAMvB,GAAG,gBAAT,UACE,cAACuB,EAAA,EAAKQ,MAAN,CAAY/B,GAAG,sBAAf,SACGK,EAAWyH,EAAKxG,QAEnB,eAACyG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAI/H,UAAU,YAA9B,qBAGA,cAAC6H,EAAA,EAAD,CAAK7H,UAAU,aAAf,SACG2H,EAAKK,MAAMC,KAAI,SAACC,GAAD,OACd,sBAAwBlI,UAAU,eAAlC,SACGE,EAAWgI,EAAErC,KAAK1E,OADV+G,EAAErC,KAAK1E,aANf,iBAYT,eAACyG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAI/H,UAAU,YAA9B,oBAGA,cAAC6H,EAAA,EAAD,CAAK7H,UAAU,aAAf,SAA6B2H,EAAKQ,WAJ3B,kBAMT,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAI/H,UAAU,YAA9B,oBAGA,cAAC6H,EAAA,EAAD,CAAK7H,UAAU,aAAf,SAA6B2H,EAAKS,WAJ3B,qBAOX,eAAChH,EAAA,EAAKO,KAAN,CAAW9B,GAAG,mBAAd,UACE,cAACuB,EAAA,EAAKiH,SAAN,CAAerI,UAAU,WAAzB,mBACC2H,EAAKW,MAAML,KAAI,SAACM,GAAD,OACd,eAACX,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAG/H,UAAU,aAA7B,SACGE,EAAWqI,EAAEC,KAAKrH,QAErB,cAAC0G,EAAA,EAAD,CAAK7H,UAAU,cAAf,SAA8BuI,EAAEE,cAJxBF,EAAEC,KAAKrH,SAOnB,cAACC,EAAA,EAAKiH,SAAN,CAAerI,UAAU,WAAzB,uBACA,cAAC0I,EAAA,EAAD,UACGf,EAAKgB,UAAUV,KAAI,SAAC7F,GAAD,OAClB,cAACwG,EAAA,EAAD,UACG1I,EAAWkC,EAAEyG,QAAQ1H,OADJiB,EAAEyG,QAAQ1H,cAMpC,sBAAKtB,GAAG,SAAR,WACI0H,GAAUN,IAAUE,GACpB,sBAAKtH,GAAG,cAAR,UACE,6DACA,gDAGF0H,GACA,eAACzH,EAAA,EAAD,CAAQD,GAAG,eAAeyB,QAAQ,UAAUvB,QAlGtD,WACEmH,GAAS,GP7DJ4B,KAAKC,SAAW,IOgEnB3B,GAAmB,GACnBF,GAAS,KAETE,GAAmB,GAdrBrD,GAAW,KAyGH,UACE,cAACiF,EAAA,EAAD,CACEnJ,GAAG,sBACH0B,IAAI,cACJE,IAAK,SAAWkG,EAAKxG,KAAO,MACpB,IACV,kDAGHoG,GACC,cAACzH,EAAA,EAAD,CAAQD,GAAG,gBAAgByB,QAAQ,SAASvB,QAhGtD,WACEuH,GAAkB,IA+FV,+BAMHH,GACC,cAAC,EAAD,CACEpG,QAASA,EACTuC,QAAS,kBAAM8D,GAAmB,IAClC7D,WAAYyD,IAGfK,GACC,cAAC,EAAD,CACEtG,QAASA,EACTuC,QAAS,kBAAMgE,GAAkB,IACjC/D,WAAYyD,O,YC7LT,SAASiC,EAAT,GAAoC,IAAPpJ,EAAM,EAANA,GAM1C,OACE,cAACC,EAAA,EAAD,CAAQD,GAAIA,EAAIyB,QAAQ,YAAYvB,QANtC,WACEmJ,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,GAIrC,SACE,mBAAGpJ,UAAU,qBCPnB,IAAMsJ,EAAqBrH,IAAMC,cAAc,IACzCqH,EAA0BtH,IAAMC,cAAc,IAE9CsH,EAAe1C,IAAH,0MAoBH,SAAS2C,EAAT,GAAmD,IAAb9G,EAAY,EAAZA,SAAY,EACzBC,mBAAS,IADgB,mBACxD8G,EADwD,KAC3CC,EAD2C,OAE7B/G,oBAAS,GAFoB,mBAExDgH,EAFwD,KAE7CC,EAF6C,OAK9BrC,YAASgC,EAAc,CACtDM,KAAMF,EACNnC,UAAW,CACTsC,MAAO,IACPC,OAAQ,KAJJtI,EALuD,EAKvDA,QAASkF,EAL8C,EAK9CA,MAAO5D,EALuC,EAKvCA,KAQxB,IAAKtB,IAAYkF,GAAS5D,EAAM,CAC9B,IAAMiH,EAAUjH,EAAKkH,SAASD,QAC9BN,EAAeM,GACf1J,ET5CuB,WS4CM0J,GAC7BJ,GAAa,GAGf,OACE,cAACP,EAAmBnG,SAApB,CAA6B1C,MAAOiJ,EAApC,SACE,cAACH,EAAwBpG,SAAzB,CAAkC1C,MAAO,CAACiB,EAASkF,GAAnD,SACGjE,MC1CM,SAASwH,IAAe,IAAD,EACFvH,oBAAS,GADP,mBAC7BwH,EAD6B,KAClBC,EADkB,OAENzH,oBAAS,GAFH,mBAE7B0H,EAF6B,KAEpBC,EAFoB,KAG9BL,EDSC1H,qBAAW8G,GCRZzG,EAAUN,IACVxB,EAAUkD,iBAAO,MAEvB,SAASuG,EAAYC,GACnB1J,EAAQuE,QAAUmF,EAClBF,GAAW,GAWb,GAAID,EACF,OACE,cAAC3K,EAAA,EAAD,CAAWE,GAAG,4BAAd,SACE,cAAC,EAAD,CAAgBkB,QAASA,EAAQuE,QAAS0B,aAXhD,WACEuD,GAAW,QAcX,IAAMnH,EAAOgH,EAAYvH,EAAUqH,EACnC,OACE,qCACGE,GAA6B,IAAhBhH,EAAK6B,QACjB,eAACtF,EAAA,EAAD,CAAWE,GAAG,gBAAgBG,UAAU,UAAxC,UACE,+DACA,8DACA,uDAGJ,eAACL,EAAA,EAAD,CAAWE,GAAG,qBAAqBG,UAAU,UAA7C,UACGoD,EAAK6E,KAAI,SAAClH,GAAD,OACR,cAAC,EAAD,CAA0BA,QAASA,EAAShB,QAASyK,GAAvCzJ,EAAQlB,OAExB,eAACC,EAAA,EAAD,CAAQD,GAAG,mBAAmByB,QAAQ,UAAUvB,QAzBxD,WACEsK,GAAcD,IAwBR,UACGA,GACC,qCACE,mBAAGpK,UAAU,qBADf,WAKAoK,GACA,qCACE,mBAAGpK,UAAU,kBADf,WAEU,cAAC0K,EAAA,EAAD,CAAOpJ,QAAQ,QAAf,SAAwBuB,EAAQoC,eAI9C,cAAC,EAAD,CAAmBpF,GAAG,wBCTjB8K,MA5Cf,WAAgB,IAAD,EACiC/H,oBAAS,GAD1C,mBACNgI,EADM,KACWC,EADX,OAEiCjI,oBAAS,GAF1C,mBAENkI,EAFM,KAEWC,EAFX,OAGWnI,oBAAS,GAHpB,mBAGNoI,EAHM,KAGAC,EAHA,OFcNzI,qBAAW+G,GEdL,mBAIN7H,EAJM,KAIGkF,EAJH,KAcb,OACE,cAAC6C,EAAD,UACE,cAAC/G,EAAD,UACE,sBAAK1C,UAAU,MAAf,UACE,0BAASH,GAAG,aAAZ,UACE,wBAAQqL,OAAO,2BAA2BrF,KAAK,eAC/C,qBACEtE,IAAI,0BACJE,IAAI,aACJC,QAAQ,YAGXkF,GAAS,cAAC,EAAD,CAAWA,MAAOA,IAC3BgE,GAAmB,cAAC,EAAD,CAAalL,SArBzC,WACEuL,GAAQ,GACRE,YAAW,WACTN,GAAmB,GACnBE,GAAmB,KAClB,QAiBIC,GAAQ,qBAAKnL,GAAG,oBACf+K,GAAmBlJ,GACnB,cAAC,EAAD,CAAgBI,UAAU,OAAOR,QAAQ,WAEzCsJ,GAAmBhE,GACnB,mBAAGN,MAAO,CAAE8E,gBAAiB,SAA7B,iEAIAR,GAAmBE,GAAmB,cAAC,EAAD,YCpCnCO,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,SCERQ,GAAS,I,MAAIC,GAAa,CAC9BC,IAAK,mDAGPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAgBL,OAAQA,GAAxB,SACE,cAAC,EAAD,QAGJ5C,SAASkD,eAAe,SAM1Bf,M","file":"static/js/main.d512cba9.chunk.js","sourcesContent":["import \"./StartScreen.scss\";\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function StartScreen({ startApp }) {\r\n  return (\r\n    <Container fluid id=\"start-screen\">\r\n      <h1 id=\"title\">PoKéMoN</h1>\r\n      <h2 id=\"subtitle\">Catch & Collect Them All!</h2>\r\n      <Button id=\"play-button\" onClick={startApp}>\r\n        Play Now <i className=\"fa fa-play\"></i>\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","export const LS_POKEMONS = \"pokemons\";\r\nexport const LS_ARCHIVE = \"archive\";\r\n\r\nexport function capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function catchSuccessfully() {\r\n  return Math.random() > 0.5;\r\n}\r\n\r\nexport function getLocalStorage(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nexport function setLocalStorage(key, value) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n","import \"./Pokemon.scss\";\r\nimport React from \"react\";\r\nimport { Card, CardImg } from \"react-bootstrap\";\r\nimport { capitalize } from \"../../utils\";\r\n\r\nexport default function Pokemon({ pokemon, onClick }) {\r\n  const displayName = pokemon.hasOwnProperty(\"nickname\")\r\n    ? pokemon.nickname\r\n    : pokemon.name;\r\n  return (\r\n    <Card className=\"pokemon-card\" onClick={() => onClick(pokemon)}>\r\n      <CardImg\r\n        className=\"pokemon-card__image\"\r\n        variant=\"top\"\r\n        src={pokemon.image}\r\n        alt={displayName + \"'s image\"}\r\n        loading=\"lazy\"\r\n      />\r\n      <Card.Body>\r\n        <Card.Title className=\"pokemon-card__name\">\r\n          {capitalize(displayName)}\r\n        </Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import \"./LoadingOverlay.scss\";\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function LoadingOverlay({\r\n  animation = \"border\",\r\n  variant = \"light\",\r\n}) {\r\n  return (\r\n    <div id=\"loading-container\">\r\n      <Spinner\r\n        className=\"spinner\"\r\n        // @ts-ignore\r\n        animation={animation === \"border\" || \"grow\" ? animation : \"border\"}\r\n        variant={\r\n          variant === \"primary\" ||\r\n          \"secondary\" ||\r\n          \"success\" ||\r\n          \"danger\" ||\r\n          \"warning\" ||\r\n          \"info\" ||\r\n          \"light\" ||\r\n          \"dark\"\r\n            ? variant\r\n            : \"light\"\r\n        }\r\n      ></Spinner>\r\n      <span>Loading</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { getLocalStorage, LS_ARCHIVE, setLocalStorage } from \"../utils\";\r\n\r\nconst ArchiveContext = React.createContext([]);\r\nconst ArchiveUpdateContext = React.createContext((a) => {\r\n  console.log(a);\r\n});\r\n\r\nexport function useArchive() {\r\n  return useContext(ArchiveContext);\r\n}\r\n\r\nexport function useArchiveUpdate() {\r\n  return useContext(ArchiveUpdateContext);\r\n}\r\n\r\nexport default function ArchiveContextProvider({ children }) {\r\n  const [archive, setArchive] = useState([]);\r\n\r\n  // get archive at first render\r\n  useEffect(() => {\r\n    const data = getLocalStorage(LS_ARCHIVE);\r\n\r\n    if (data) {\r\n      setArchive(data);\r\n    } else {\r\n      setArchive([]);\r\n      setLocalStorage(LS_ARCHIVE, []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ArchiveContext.Provider value={archive}>\r\n      <ArchiveUpdateContext.Provider value={(list) => setArchive(list)}>\r\n        {children}\r\n      </ArchiveUpdateContext.Provider>\r\n    </ArchiveContext.Provider>\r\n  );\r\n}\r\n","import \"./NewPokemonForm.scss\";\r\nimport \"../../animation.scss\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useArchive, useArchiveUpdate } from \"../../contexts/ArchiveContext\";\r\nimport { LS_ARCHIVE, setLocalStorage } from \"../../utils\";\r\n\r\nexport default function NewPokemonForm({ pokemon, onClose, onComplete }) {\r\n  const [show, setShow] = useState(true);\r\n  const [validated, setValidated] = useState(false);\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [warning, setWarning] = useState(false);\r\n  const archive = useArchive();\r\n  const setArchive = useArchiveUpdate();\r\n  const formNameRef = useRef(null);\r\n\r\n  function triggerWarning() {\r\n    setWarning(true);\r\n  }\r\n\r\n  function stopWarning() {\r\n    setWarning(false);\r\n  }\r\n\r\n  function handleClose() {\r\n    setShow(false);\r\n    onClose();\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setFormName(e.target.value);\r\n    setValidated(false);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (formName.length >= 4 && formName.length <= 12) {\r\n      setValidated(true);\r\n      addToArchive(formName);\r\n      handleClose();\r\n      onComplete();\r\n    } else {\r\n      formNameRef.current.focus();\r\n      triggerWarning();\r\n    }\r\n  }\r\n\r\n  function addToArchive(nickname) {\r\n    const newPokemon = {\r\n      uuid: uuid(),\r\n      nickname: nickname,\r\n      id: pokemon.id,\r\n      name: pokemon.name,\r\n      image: pokemon.image,\r\n    };\r\n    const newList = [...archive, newPokemon];\r\n\r\n    // update archive context\r\n    setArchive(newList);\r\n\r\n    // update archive in local storage\r\n    setLocalStorage(LS_ARCHIVE, newList);\r\n\r\n    console.log(\"Saved!\");\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      className=\"mx-auto\"\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Gotcha!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body\r\n        className={warning ? \"flash-red\" : \"\"}\r\n        onAnimationEnd={stopWarning}\r\n      >\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formPokemonName\">\r\n            <Form.Label>Give your new pokemon a name</Form.Label>\r\n            <Form.Control\r\n              ref={formNameRef}\r\n              type=\"text\"\r\n              placeholder=\"Input pokemon's name\"\r\n              required\r\n              value={formName}\r\n              onChange={handleChange}\r\n              isInvalid={formName.length < 4 || formName.length > 12}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Pokemon's name must be 4-12 characters long.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <div id=\"modal__buttons\">\r\n            <Button variant=\"danger\" onClick={handleClose}>\r\n              Let it go...\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <p>The pokemon you catch will be moved to your inventory</p>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import \"./DeleteConfirmation.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { LS_ARCHIVE, setLocalStorage } from \"../../utils\";\r\nimport { useArchive, useArchiveUpdate } from \"../../contexts/ArchiveContext\";\r\n\r\nexport default function DeleteModal({ pokemon, onClose, onComplete }) {\r\n  const [show, setShow] = useState(true);\r\n  const archive = useArchive();\r\n  const setArchive = useArchiveUpdate();\r\n\r\n  function handleClose() {\r\n    setShow(false);\r\n    onClose();\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    deleteFromArchive();\r\n    handleClose();\r\n    onComplete();\r\n  }\r\n\r\n  function deleteFromArchive() {\r\n    const newList = archive.filter((p) => p.uuid !== pokemon.uuid);\r\n\r\n    // update archive context\r\n    setArchive(newList);\r\n\r\n    // update archive in local storage\r\n    setLocalStorage(LS_ARCHIVE, newList);\r\n\r\n    console.log(\"Deleted!\");\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"mx-auto my-auto\"\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Warning!</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Are you sure you want to delete this pokemon from the archive?</p>\r\n        <p style={{ color: \"red\" }}>IMPORTANT: You can not undo this action.</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={handleSubmit}>\r\n          Delete\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import \"./ErrorPage.scss\";\r\nimport React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function ErrorPage({ error }) {\r\n  return (\r\n    <Container fluid id=\"error-container\">\r\n      <h1>Error!</h1>\r\n      <p>Something's wrong...</p>\r\n      <code>{error}</code>\r\n    </Container>\r\n  );\r\n}\r\n","import \"./PokemonDetails.scss\";\r\nimport \"../../animation.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { capitalize, catchSuccessfully } from \"../../utils\";\r\nimport LoadingOverlay from \"../LoadingOverlay/LoadingOverlay\";\r\nimport NewPokemonForm from \"../NewPokemonForm/NewPokemonForm\";\r\nimport DeleteConfirmation from \"../DeleteConfirmation/DeleteConfirmation\";\r\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\r\n\r\nconst GET_POKEMON_DETAILS = gql`\r\n  query pokemon($species: String!) {\r\n    pokemon(name: $species) {\r\n      id\r\n      name\r\n      weight\r\n      height\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n      stats {\r\n        base_stat\r\n        effort\r\n        stat {\r\n          name\r\n        }\r\n      }\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PokemonDetails({ pokemon, closeDetails }) {\r\n  const [tried, setTried] = useState(false);\r\n  const [successDialogue, setSuccessDialogue] = useState(false);\r\n  const [deleteDialogue, setDeleteDialogue] = useState(false);\r\n  const [warning, setWarning] = useState(false);\r\n  const isMine = pokemon.hasOwnProperty(\"nickname\");\r\n\r\n  const { loading, error, data } = useQuery(GET_POKEMON_DETAILS, {\r\n    variables: { species: pokemon.name },\r\n  });\r\n\r\n  function triggerWarning() {\r\n    setWarning(true);\r\n  }\r\n\r\n  function stopWarning() {\r\n    setWarning(false);\r\n  }\r\n\r\n  function catchPokemon() {\r\n    setTried(true);\r\n\r\n    if (catchSuccessfully()) {\r\n      setSuccessDialogue(true);\r\n      setTried(false);\r\n    } else {\r\n      setSuccessDialogue(false);\r\n      triggerWarning();\r\n    }\r\n  }\r\n\r\n  function deletePokemon() {\r\n    setDeleteDialogue(true);\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingOverlay animation=\"grow\" variant=\"light\" />;\r\n  } else if (error) {\r\n    return <ErrorPage error={error} />;\r\n  } else {\r\n    const info = data.pokemon;\r\n\r\n    return (\r\n      <Card\r\n        id=\"pokemon\"\r\n        className={warning ? \"flash-red\" : \"\"}\r\n        onAnimationEnd={stopWarning}\r\n      >\r\n        <CardImg\r\n          id=\"pokemon__image\"\r\n          src={pokemon.image}\r\n          alt={info.name + \"'s image\"}\r\n        />\r\n        {isMine && (\r\n          <Card.Title id=\"pokemon__nickname\" className=\"mx-auto\">\r\n            {pokemon.nickname}\r\n          </Card.Title>\r\n        )}\r\n        <Button id=\"close-button\" variant=\"link\" onClick={closeDetails}>\r\n          <i className=\"fa fa-times\"></i>\r\n        </Button>\r\n        <Card id=\"pokemon__info\">\r\n          <Card.Title id=\"pokemon__info__name\">\r\n            {capitalize(info.name)}\r\n          </Card.Title>\r\n          <Row key=\"pokemon-types\">\r\n            <Col md={4} xs={12} className=\"info-name\">\r\n              Type(s)\r\n            </Col>\r\n            <Col className=\"info-value\">\r\n              {info.types.map((t) => (\r\n                <span key={t.type.name} className=\"pokemon-type\">\r\n                  {capitalize(t.type.name)}\r\n                </span>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n          <Row key=\"pokemon-weight\">\r\n            <Col md={4} xs={12} className=\"info-name\">\r\n              Weight\r\n            </Col>\r\n            <Col className=\"info-value\">{info.weight}</Col>\r\n          </Row>\r\n          <Row key=\"pokemon-height\">\r\n            <Col md={4} xs={12} className=\"info-name\">\r\n              Height\r\n            </Col>\r\n            <Col className=\"info-value\">{info.height}</Col>\r\n          </Row>\r\n        </Card>\r\n        <Card.Body id=\"pokemon__details\">\r\n          <Card.Subtitle className=\"subtitle\">Stats</Card.Subtitle>\r\n          {info.stats.map((s) => (\r\n            <Row key={s.stat.name}>\r\n              <Col md={8} xs={6} className=\"stat-names\">\r\n                {capitalize(s.stat.name)}\r\n              </Col>\r\n              <Col className=\"stat-values\">{s.base_stat}</Col>\r\n            </Row>\r\n          ))}\r\n          <Card.Subtitle className=\"subtitle\">Abilities</Card.Subtitle>\r\n          <ListGroup>\r\n            {info.abilities.map((a) => (\r\n              <ListGroupItem key={a.ability.name}>\r\n                {capitalize(a.ability.name)}\r\n              </ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </Card.Body>\r\n        <div id=\"footer\">\r\n          {!isMine && tried && !successDialogue && (\r\n            <div id=\"catch-label\">\r\n              <p>Failed to catch the pokemon.</p>\r\n              <p> Try again?</p>\r\n            </div>\r\n          )}\r\n          {!isMine && (\r\n            <Button id=\"catch-button\" variant=\"primary\" onClick={catchPokemon}>\r\n              <Image\r\n                id=\"catch-button__image\"\r\n                src=\"favicon.ico\"\r\n                alt={\"Catch \" + info.name + \"!\"}\r\n              ></Image>{\" \"}\r\n              <strong>Catch It!</strong>\r\n            </Button>\r\n          )}\r\n          {isMine && (\r\n            <Button id=\"delete-button\" variant=\"danger\" onClick={deletePokemon}>\r\n              Delete Pokemon\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {successDialogue && (\r\n          <NewPokemonForm\r\n            pokemon={pokemon}\r\n            onClose={() => setSuccessDialogue(false)}\r\n            onComplete={closeDetails}\r\n          />\r\n        )}\r\n        {deleteDialogue && (\r\n          <DeleteConfirmation\r\n            pokemon={pokemon}\r\n            onClose={() => setDeleteDialogue(false)}\r\n            onComplete={closeDetails}\r\n          />\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import \"./ScrollToTopButton.scss\";\r\nimport React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function ScrollToTopButton({ id }) {\r\n  function scrollToTop() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  return (\r\n    <Button id={id} variant=\"secondary\" onClick={scrollToTop}>\r\n      <i className=\"fa fa-angle-up\"></i>\r\n    </Button>\r\n  );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { LS_POKEMONS, setLocalStorage } from \"../utils\";\r\n\r\nconst PokemonListContext = React.createContext([]);\r\nconst PokemonListFetchContext = React.createContext([]);\r\n\r\nconst GET_POKEMONS = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function usePokemonList() {\r\n  return useContext(PokemonListContext);\r\n}\r\n\r\nexport function usePokemonListFetch() {\r\n  return useContext(PokemonListFetchContext);\r\n}\r\n\r\nexport default function PokemonListContextProvider({ children }) {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [skipQuery, setSkipQuery] = useState(false);\r\n\r\n  // query pokemon list from API\r\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\r\n    skip: skipQuery,\r\n    variables: {\r\n      limit: 898,\r\n      offset: 0,\r\n    },\r\n  });\r\n\r\n  if (!loading && !error && data) {\r\n    const results = data.pokemons.results;\r\n    setPokemonList(results);\r\n    setLocalStorage(LS_POKEMONS, results);\r\n    setSkipQuery(true);\r\n  }\r\n\r\n  return (\r\n    <PokemonListContext.Provider value={pokemonList}>\r\n      <PokemonListFetchContext.Provider value={[loading, error]}>\r\n        {children}\r\n      </PokemonListFetchContext.Provider>\r\n    </PokemonListContext.Provider>\r\n  );\r\n}\r\n","import \"./PokemonList.scss\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Badge, Button, Container } from \"react-bootstrap\";\r\nimport Pokemon from \"../Pokemon/Pokemon\";\r\nimport PokemonDetails from \"../PokemonDetails/PokemonDetails\";\r\nimport ScrollToTopButton from \"../ScrollToTopButton/ScrollToTopButton\";\r\nimport { usePokemonList } from \"../../contexts/PokemonListContext\";\r\nimport { useArchive } from \"../../contexts/ArchiveContext\";\r\n\r\nexport default function PokemonList() {\r\n  const [isArchive, setIsArchive] = useState(false);\r\n  const [details, setDetails] = useState(false);\r\n  const pokemons = usePokemonList();\r\n  const archive = useArchive();\r\n  const pokemon = useRef(null);\r\n\r\n  function viewDetails(obj) {\r\n    pokemon.current = obj;\r\n    setDetails(true);\r\n  }\r\n\r\n  function closeDetails() {\r\n    setDetails(false);\r\n  }\r\n\r\n  function toggleList() {\r\n    setIsArchive(!isArchive);\r\n  }\r\n\r\n  if (details) {\r\n    return (\r\n      <Container id=\"pokemon-details-container\">\r\n        <PokemonDetails pokemon={pokemon.current} closeDetails={closeDetails} />\r\n      </Container>\r\n    );\r\n  } else {\r\n    const list = isArchive ? archive : pokemons;\r\n    return (\r\n      <>\r\n        {isArchive && list.length === 0 && (\r\n          <Container id=\"empty-message\" className=\"mx-auto\">\r\n            <p>You do not have a pokemon yet.</p>\r\n            <p>Try to catch one in the wild.</p>\r\n            <p>Good luck, trainer!</p>\r\n          </Container>\r\n        )}\r\n        <Container id=\"pokemons-container\" className=\"mx-auto\">\r\n          {list.map((pokemon) => (\r\n            <Pokemon key={pokemon.id} pokemon={pokemon} onClick={viewDetails} />\r\n          ))}\r\n          <Button id=\"toggleListButton\" variant=\"primary\" onClick={toggleList}>\r\n            {isArchive && (\r\n              <>\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                Back\r\n              </>\r\n            )}\r\n            {!isArchive && (\r\n              <>\r\n                <i className=\"fa fa-archive\"></i>\r\n                Archive <Badge variant=\"light\">{archive.length}</Badge>\r\n              </>\r\n            )}\r\n          </Button>\r\n          <ScrollToTopButton id=\"goToTopButton\" />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./App.scss\";\nimport React, { useState } from \"react\";\nimport StartScreen from \"./components/StartScreen/StartScreen\";\nimport PokemonList from \"./components/PokemonList/PokemonList\";\nimport LoadingOverlay from \"./components/LoadingOverlay/LoadingOverlay\";\nimport PokemonListContextProvider, {\n  usePokemonListFetch,\n} from \"./contexts/PokemonListContext\";\nimport ArchiveContextProvider from \"./contexts/ArchiveContext\";\nimport ErrorPage from \"./components/ErrorPage/ErrorPage\";\n\nfunction App() {\n  const [showStartScreen, setShowStartScreen] = useState(true);\n  const [showPokemonList, setShowPokemonList] = useState(false);\n  const [fade, setFade] = useState(false);\n  const [loading, error] = usePokemonListFetch();\n\n  function startApp() {\n    setFade(true);\n    setTimeout(() => {\n      setShowStartScreen(false);\n      setShowPokemonList(true);\n    }, 250);\n  }\n\n  return (\n    <PokemonListContextProvider>\n      <ArchiveContextProvider>\n        <div className=\"App\">\n          <picture id=\"background\">\n            <source srcSet=\"./images/background.webp\" type=\"image/webp\" />\n            <img\n              src=\"./images/background.jpg\"\n              alt=\"background\"\n              loading=\"lazy\"\n            />\n          </picture>\n          {error && <ErrorPage error={error} />}\n          {showStartScreen && <StartScreen startApp={startApp} />}\n          {fade && <div id=\"fade-animation\"></div>}\n          {!showStartScreen && loading && (\n            <LoadingOverlay animation=\"grow\" variant=\"light\" />\n          )}\n          {!showStartScreen && error && (\n            <p style={{ backgroundColor: \"white\" }}>\n              Something's wrong. Please try to refresh the page.\n            </p>\n          )}\n          {!showStartScreen && showPokemonList && <PokemonList />}\n        </div>\n      </ArchiveContextProvider>\n    </PokemonListContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}